/**
 * @author JS by LoktionovTEAM
 * @license Copyright (c) 2021-2022
 */
!(function (e) {
	'use strict'
	if (
		(e(document).on('click', '.nav-menu a, .mobile-nav a', function (o) {
			if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
				var i = this.hash
				if (e(i).length)
					return (
						o.preventDefault(),
						e(this).parents('.nav-menu, .mobile-nav').length && (e('.nav-menu .active, .mobile-nav .active').removeClass('active'), e(this).closest('li').addClass('active')),
						'#header' == i
							? (e('#header').removeClass('header-top'),
							  e('section').removeClass('section-open'),
							  void (e('body').hasClass('mobile-nav-active') && (e('body').removeClass('mobile-nav-active'), e('.mobile-nav-toggle i').toggleClass('icofont-navigation-menu icofont-close'), e('.mobile-nav-overly').fadeOut())))
							: (e('#header').hasClass('header-top')
									? (e('section').removeClass('section-open'), e(i).addClass('section-open'))
									: (e('#header').addClass('header-top'),
									  setTimeout(function () {
											e('section').removeClass('section-open'), e(i).addClass('section-open')
									  }, 350)),
							  e('html, body').animate({ scrollTop: 0 }, 350),
							  e('body').hasClass('mobile-nav-active') && (e('body').removeClass('mobile-nav-active'), e('.mobile-nav-toggle i').toggleClass('icofont-navigation-menu icofont-close'), e('.mobile-nav-overly').fadeOut()),
							  !1)
					)
			}
		}),
		window.location.hash)
	) {
		var o = window.location.hash
		e(o).length &&
			(e('#header').addClass('header-top'),
			e('.nav-menu .active, .mobile-nav .active').removeClass('active'),
			e('.nav-menu, .mobile-nav')
				.find('a[href="' + o + '"]')
				.parent('li')
				.addClass('active'),
			setTimeout(function () {
				e('section').removeClass('section-open'), e(o).addClass('section-open')
			}, 350))
	}
	if (e('.nav-menu').length) {
		var i = e('.nav-menu').clone().prop({ class: 'mobile-nav' })
		e('body').append(i),
			e('body').prepend('<button type="button" class="mobile-nav-toggle"><i class="icofont-navigation-menu"></i></button>'),
			e('body').append('<div class="mobile-nav-overly"></div>'),
			e(document).on('click', '.mobile-nav-toggle', function (o) {
				e('body').toggleClass('mobile-nav-active'), e('.mobile-nav-toggle i').toggleClass('icofont-navigation-menu icofont-close'), e('.mobile-nav-overly').toggle()
			}),
			e(document).click(function (o) {
				var i = e('.mobile-nav, .mobile-nav-toggle')
				i.is(o.target) || 0 !== i.has(o.target).length || (e('body').hasClass('mobile-nav-active') && (e('body').removeClass('mobile-nav-active'), e('.mobile-nav-toggle i').toggleClass('icofont-navigation-menu icofont-close'), e('.mobile-nav-overly').fadeOut()))
			})
	} else e('.mobile-nav, .mobile-nav-toggle').length && e('.mobile-nav, .mobile-nav-toggle').hide()
	e('[quick-count="counter-up"]').counterUp({ delay: 10, time: 1e3 }),
		e('.progress-box').waypoint(
			function () {
				e('.progress .progress-bar').each(function () {
					e(this).css('width', e(this).attr('aria-valuenow') + '%')
				})
			},
			{ offset: '80%' }
		)
	new Swiper('.text-slider', {
		spaceBetween: 30,
		centeredSlides: !1,
		slidesPerView: 3,
		slidesPerGroup: 1,
		autoplay: { delay: 2500, stopOnLastSlide: !1, disableOnInteraction: !1 },
		loop: !0,
		speed: 300,
		autoHeight: !1,
		pagination: { el: '.swiper-pagination', type: 'bullets', clickable: !0, dynamicBullets: !0 },
		simulateTouch: !0,
		touchRatio: 1,
		touchAngle: 45,
		grabCursor: !1,
		slideToClicKedSlide: !1,
		keyboard: { enabled: !0, onlyInViewport: !0, pageUpDown: !0 },
		effect: 'slide',
		breakpoints: { 0: { slidesPerView: 1 }, 576: { slidesPerView: 2 }, 1024: { slidesPerView: 3 } },
	})
	new Swiper('.img-slider', {
		spaceBetween: 10,
		centeredSlides: !0,
		slidesPerView: 1,
		slidesPerGroup: 1,
		autoplay: { delay: 2500, stopOnLastSlide: !1, disableOnInteraction: !1 },
		loop: !0,
		speed: 400,
		autoHeight: !1,
		pagination: { el: '.img-slider__pagination', type: 'bullets', clickable: !0, dynamicBullets: !0 },
		simulateTouch: !0,
		touchRatio: 1,
		touchAngle: 45,
		grabCursor: !1,
		slideToClicKedSlide: !1,
		keyboard: { enabled: !0, onlyInViewport: !0, pageUpDown: !0 },
		effect: 'fade',
		fadeEffect: { crossFade: !0 },
		breakpoints: { '@0.75': { slidesPerView: 1 }, '@1.00': { slidesPerView: 1 }, '@1.50': { slidesPerView: 1 } },
	}),
		e(window).on('load', function () {
			var o = e('.portfolio-container').isotope({ itemSelector: '.portfolio-item', layoutMode: 'fitRows' })
			e('#portfolio-flters li').on('click', function () {
				e('#portfolio-flters li').removeClass('filter-active'), e(this).addClass('filter-active'), o.isotope({ filter: e(this).data('filter') })
			})
		}),
		e(document).ready(function () {
			e('.venobox').venobox({ share: !1 })
		})


		$('#file-input')
			.focus(function () {
				$('label').addClass('focus')
			})
			.focusout(function () {
				$('label').removeClass('focus')
			})
		let dropZone = $('.form-message .input-label-box')
		dropZone.on('dragover dragenter', function () {
			dropZone.addClass('dragover')
		})

		dropZone.on('dragleave', function (e) {
			let dx = e.pageX - dropZone.offset().left
			let dy = e.pageY - dropZone.offset().top
			if (dx < 0 || dx > dropZone.width() || dy < 0 || dy > dropZone.height()) {
				dropZone.removeClass('dragover')
			}
		})
		console.log(dropZone)
		dropZone.on('drop', function (e) {
			dropZone.removeClass('dragover')
			// console.log('Файл брошен');

			let files = e.originalEvent.dataTransfer.files
			sendFiles(files)
		})
		$('#file-input').change(function () {
			let files = this.files
			sendFiles(files)
		})
		// $.ajax({
		// 	url: dropZone.attr('action'),
		// 	type: dropZone.attr('method'),
		// 	data: Data,
		// 	contentType: false,
		// 	processData: false,
		// 	success: function (data) {
		// 		alert('Файлы были успешно загружены')
		// 	},
		// })
})(jQuery)
function sendFiles(files) {
     let maxFileSize = 5242880;
     let Data = new FormData();
     $(files).each(function(index, file) {
          if ((file.size <= maxFileSize) && ((file.type == 'image/png') || (file.type == 'image/jpeg'))) {
               Data.append('images[]', file);
          }
     });
};
document.addEventListener('DOMContentLoaded', function () {
	const elem = document.querySelector('.js-age')
	console.log(elem)

	const age = calculateAge('1983-09-15')
	console.log(age)

	// if (elem && age) {
	// 	elem.innerHTML = `<i class="icofont-rounded-right"></i><b>Age:</b>${age}`
	// } else {
	// 	elem.innerHTML = `<i class="icofont-rounded-right"></i><b>Age:</b>30`
	// }

	elem && age ? (elem.innerHTML = `${age}`) : (elem.innerHTML = '30')

	// elem.innerHTML = `<i class="icofont-rounded-right"></i><b>Age:</b>${age}`

	function calculateAge(birthday) {
		let birthdayDate = new Date(birthday)
		let currentDate = new Date()
		let age = currentDate.getFullYear() - birthdayDate.getFullYear()

		if (currentDate.getMonth() < birthdayDate.getMonth() || (currentDate.getMonth() == birthdayDate.getMonth() && currentDate.getDate() < birthdayDate.getDate())) {
			age--
		}
		return age
	}

	// const portfolio = document.getElementById('portfolio') // целевой блок
	// const isVerticalScroll = portfolio.scrollHeight > portfolio.clientHeight // вертикальный скролл
	// const isHorizontalScroll = portfolio.scrollWidth > portfolio.clientWidth // горизонтальный скролл
	// console.log({ isVerticalScroll, isHorizontalScroll })

})
